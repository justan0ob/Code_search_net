#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Apr  2 11:52:27 2024

@author: msaqib
"""

import numpy as np
import pandas as pd
from src import model_evaluation
from fastapi import FastAPI
from sentence_transformers import SentenceTransformer

app=FastAPI()

eval_object=model_evaluation.evaluation()

df=pd.read_csv("Data/processed_data.csv")

model_1 = SentenceTransformer('sentence-transformers/all-mpnet-base-v2')

embeddings_model_1 = np.load("embeddings/embeddings_all_mpnet_base_v2.npy")


#class model_input(BaseModel) :
#   text : str
   

@app.get('/model_prediction/{query}')


def model_pred(query : str) :
    
    table=eval_object.get_top_code_and_docstring(query,embeddings_model_1,model_1,df)
    
    table=eval_object.add_column(table)
    
    column_order = ['Docstrings','Code','Match']
    
    table=table[column_order]
    
    code = []
    
    for index,row in table.iterrows() :
        
        #getting the response from claude api
        response=eval_object.check_response(query,row['Code'])
        
        print(f"{index+1}")
        
        # printing the reponse from the claude api using the key
        #print(response)
        
        
        #print(response.content)
        #Checking the value present in the response generated by the claude
        if 'YES' in response.content:
            response='YES'
            #print(type(row['Code']))
            code.append(row['Code'])
            
        else :
            response='NO'
            
        #Giving the value of response in match column for current row
        table.at[index,'Match']=response
    
    
    #print(query)
    print(len(code))
    if (len(code)==0):
        return "Invalid Input Query"
    return code
